steps:
  # Build frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/vue-multiagent-frontend:$COMMIT_SHA', './frontend']
  
  # Build backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/vue-multiagent-backend:$COMMIT_SHA', './backend']
  
  # Push images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/vue-multiagent-frontend:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/vue-multiagent-backend:$COMMIT_SHA']
  
  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'vue-multiagent-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/vue-multiagent-backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - '$_CLOUD_SQL_CONNECTION_NAME'
      - '--set-env-vars'
      - 'INSTANCE_CONNECTION_NAME=$_CLOUD_SQL_CONNECTION_NAME'
      - '--set-secrets'
      - 'OPENAI_API_KEY=openai-api-key:latest,SECRET_KEY=jwt-secret-key:latest'
  
  # Deploy frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'vue-multiagent-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/vue-multiagent-frontend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

substitutions:
  _CLOUD_SQL_CONNECTION_NAME: 'your-project:us-central1:your-instance'

images:
  - 'gcr.io/$PROJECT_ID/vue-multiagent-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/vue-multiagent-backend:$COMMIT_SHA'